package database

import "errors"

// errors generated by database api

// token errors
var ErrTokenNotFound = errors.New("token not found")
var ErrTokenExpired = errors.New("token expired")

// parameter errors
var ErrParamNotFound = errors.New("parameter required")
var ErrUpdateValueNotFound = errors.New("update value does not exist error")

// gorm errors
var ErrGormDelete = errors.New("gorm delete error")
var ErrGormCreate = errors.New("gorm create error")
var ErrGormGet = errors.New("gorm get error")
var ErrGormAssocAppend = errors.New("gorm association append error")
var ErrGormSave = errors.New("gorm save error")
var ErrGormUpdate = errors.New("gorm update error")
var ErrUserNotFound = errors.New("user not found")

// custom errors
var ErrIDLength = errors.New("id length zero")
var ErrMembersExists = errors.New("group must be empty to be deleted")
var ErrQuestionExists = errors.New("question already exists error")

// logError prints errors with given prefix (mostly name of the function), message and parameters. errorLogger must be present.
func (db *Database) logError(prefix, message string, parameters ...interface{}) {
	if db.debugLog != nil {
		db.debugLog.Printf("[%s] Error: %s, Params: %#v", prefix, message, parameters)
	}
}
